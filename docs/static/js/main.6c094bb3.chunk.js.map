{"version":3,"sources":["customScales.js","App.js","serviceWorker.js","index.js"],"names":["perc2color","perc","r","g","Math","round","b","toString","slice","cat20list","cat20","i","cat12list","cat12","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","nColors","diyScale0","diyScale1","str","el","document","createElement","value","body","appendChild","select","execCommand","removeChild","toastr","success","timeOut","_this2","cat10Scale","scaleOrdinal","schemeCategory10","infernoScale","scaleSequential","interpolateInferno","domain","brbgScale","interpolateBrBG","prgnScale","interpolatePRGn","piygScale","interpolatePiYG","puorScale","interpolatePuOr","viridiscolorScale","interpolateViridis","spectralScale","interpolateSpectral","diyColor","scaleLinear","interpolate","interpolateHcl","range","catDiv","categories","split","colors","s","push","concat","catDivide","iterArray","react_default","a","className","min","type","onInput","evt","setState","target","map","style","height","width","backgroundColor","length","onClick","copyToClipboard","id","onChange","e","color","hex","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6c094bb3.chunk.js","sourcesContent":["function perc2color(perc) {\n\tvar r, g, b = 0;\n\tif(perc < 50) {\n\t\tr = 255;\n\t\tg = Math.round(5.1 * perc);\n\t}\n\telse {\n\t\tg = 255;\n\t\tr = Math.round(510 - 5.10 * perc);\n\t}\n\tvar h = r * 0x10000 + g * 0x100 + b * 0x1;\n\treturn '#' + ('000000' + h.toString(16)).slice(-6);\n}\n\nconst cat20list = [\n\t\"#1f77b4\",\n\t\"#aec7e8\",\n\t\"#ff7f0e\",\n\t\"#ffbb78\",\n\t\"#2ca02c\",\n\t\"#98df8a\",\n\t\"#d62728\",\n\t\"#ff9896\",\n\t\"#9467bd\",\n\t\"#c5b0d5\",\n\t\"#8c564b\",\n\t\"#c49c94\",\n\t\"#e377c2\",\n\t\"#f7b6d2\",\n\t\"#7f7f7f\",\n\t\"#c7c7c7\",\n\t\"#bcbd22\",\n\t\"#dbdb8d\",\n\t\"#17becf\",\n\t\"#9edae5\"\n]\n\nconst cat20 = i => cat20list[(i-1)%20]\n\nconst cat12list = ['#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462','#b3de69','#fccde5','#d9d9d9','#bc80bd','#ccebc5','#ffed6f']\n\nconst cat12 = i => cat12list[(i-1)%12]\n\nconst catDivide = (categories) => {\n\tconst split = 359/categories;\n\tconst colors = []\n\tconst s = categories < 10 ? () => '50%' : (i) => i%2==0? '35%':'75%';\n\tfor (var i = 0; i <= categories; i++) {\n\t\tcolors.push(`hsl(${split*i}, 50%, ${s(i)})`)\n\t}\n\treturn (i) => colors[i]\n}\n\nexport {perc2color, cat20, cat12, catDivide};\n","import React, { Component } from 'react';\nimport { \n  scaleOrdinal, \n  scaleLinear, \n  schemeCategory10, \n  scaleSequential, \n  interpolateInferno, \n  interpolateViridis, \n  interpolateHcl,\n  interpolateBrBG,\n  interpolatePRGn,\n  interpolatePiYG,\n  interpolatePuOr,\n  interpolateSpectral\n} from 'd3';\nimport {color, hex} from 'd3-color'\nimport { perc2color, cat12, cat20, catDivide } from './customScales';\nimport './App.css';\nimport toastr from 'toastr';\nimport './Toastr.css';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nColors: 6,\n      diyScale0: \"#FD7F0B\",\n      diyScale1: \"#18A3FF\"\n    };\n  }\n  copyToClipboard(str){\n    const el = document.createElement('textarea');\n    el.value = str;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n    toastr.success('Copied to clipboard', \"\" ,{timeOut: 1500})\n  }\n  render() {\n    const cat10Scale = scaleOrdinal(schemeCategory10);\n\n    const infernoScale = scaleSequential(interpolateInferno)\n      .domain([1, this.state.nColors])\n    \n    const brbgScale = scaleSequential(interpolateBrBG)\n      .domain([1, this.state.nColors])\n\n    const prgnScale = scaleSequential(interpolatePRGn)\n      .domain([1, this.state.nColors])\n\n    const piygScale = scaleSequential(interpolatePiYG)\n      .domain([1, this.state.nColors])\n\n    const puorScale = scaleSequential(interpolatePuOr)\n      .domain([1, this.state.nColors])\n\n    const viridiscolorScale = scaleSequential(interpolateViridis)\n      .domain([1, this.state.nColors])\n\n    const spectralScale = scaleSequential(interpolateSpectral)\n      .domain([1, this.state.nColors])\n      \n\n    const diyColor = scaleLinear().domain([1,this.state.nColors])\n      .interpolate(interpolateHcl)\n      .range([this.state.diyScale0, this.state.diyScale1]);\n\n    const catDiv = catDivide(this.state.nColors)\n\n    const iterArray = [];\n    for (var i = 1; i <= this.state.nColors; i++) {\n      iterArray.push(i)\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>\n            CIA Vis Color Generator\n          </p>\n        </header>\n        <main className=\"flex f-center\">\n          <div>\n            \n          \n            <div>\n              <h3>Pick Amount of Colors</h3>\n              <input min=\"1\" type=\"number\" value={this.state.nColors} onInput={(evt) => this.setState({nColors: evt.target.value})}/>\n            </div>\n            <div>\n              <h3>Sequential</h3>\n              <div>\n\n                <div className=\"flex scale\">\n                  {iterArray.map((i) => <div style={{height: '70px', width: '100px', backgroundColor: perc2color(100-(100/iterArray.length)*i)}}>\n                    <p onClick={()=>{this.copyToClipboard(perc2color(100-(100/iterArray.length)*i))}} >{perc2color(100-(100/iterArray.length)*i)}</p>\n                  </div>)}\n                </div> \n\n                <div className=\"flex scale\">\n                  {iterArray.map((i) => <div style={{height: '70px', width: '100px', backgroundColor: viridiscolorScale(i)}}>\n                    <p onClick={()=>{this.copyToClipboard(viridiscolorScale(i))}} >{viridiscolorScale(i)}</p>\n                  </div>)}\n                </div>\n\n                <div className=\"flex scale\">\n                  {iterArray.map((i) => <div style={{height: '70px', width: '100px', backgroundColor: infernoScale(i)}}>\n                    <p onClick={()=>{this.copyToClipboard(infernoScale(i))}} >{infernoScale(i)}</p>\n                  </div>)}\n                </div> \n\n\n                <div className=\"\">\n                  <div className=\"scale f-center a-center flex\">\n                    <input type=\"color\" id=\"html5colorpicker\" onChange={(e)=> {this.setState({diyScale0: e.target.value}); } } value={this.state.diyScale0} />\n                    <p>Pick your own colors:</p>\n                    <input type=\"color\" id=\"html5colorpicker\" onChange={(e)=> {this.setState({diyScale1: e.target.value}); } } value={this.state.diyScale1} />\n                  </div>\n                  <div className=\"flex scale\">\n                    {iterArray.map((i) => <div style={{height: '70px', width: '100px', backgroundColor: diyColor(i)}}>\n                      <p onClick={()=>{this.copyToClipboard(color(diyColor(i)).hex())}} >{color(diyColor(i)).hex()}</p>\n                    </div>)}\n                  </div>\n                </div>  \n                \n              </div>\n            </div>\n            <div>\n              <h3>Diverging</h3>\n              <div>   \n                \n                <div className=\"flex scale\">\n                  {iterArray.map((i) => <div style={{height: '70px', width: '100px', backgroundColor: brbgScale(i)}}>\n                    <p onClick={()=>{this.copyToClipboard(color(brbgScale(i)).hex())}} >{color(brbgScale(i)).hex()}</p>\n                  </div>)}\n                </div>\n\n                <div className=\"flex scale\">\n                  {iterArray.map((i) => <div style={{height: '70px', width: '100px', backgroundColor: prgnScale(i)}}>\n                    <p onClick={()=>{this.copyToClipboard(color(prgnScale(i)).hex())}} >{color(prgnScale(i)).hex()}</p>\n                  </div>)}\n                </div>\n\n                <div className=\"flex scale\">\n                  {iterArray.map((i) => <div style={{height: '70px', width: '100px', backgroundColor: piygScale(i)}}>\n                    <p onClick={()=>{this.copyToClipboard(color(piygScale(i)).hex())}} >{color(piygScale(i)).hex()}</p>\n                  </div>)}\n                </div>\n\n                <div className=\"flex scale\">\n                  {iterArray.map((i) => <div style={{height: '70px', width: '100px', backgroundColor: puorScale(i)}}>\n                    <p onClick={()=>{this.copyToClipboard(color(puorScale(i)).hex())}} >{color(puorScale(i)).hex()}</p>\n                  </div>)}\n                </div>\n\n                <div className=\"flex scale\">\n                  {iterArray.map((i) => <div style={{height: '70px', width: '100px', backgroundColor: spectralScale(i)}}>\n                    <p onClick={()=>{this.copyToClipboard(color(spectralScale(i)).hex())}} >{color(spectralScale(i)).hex()}</p>\n                  </div>)}\n                </div>\n\n              </div>\n            </div>\n            <div>\n              <h3>Categorical</h3>\n              <div>\n                <p>Category 10</p>\n                <div className=\"flex scale\">\n                  {iterArray.map(i => <div style={{height: '70px', width: '100px', backgroundColor: cat10Scale(i)}}>\n                    <p onClick={()=>{this.copyToClipboard(cat10Scale(i))}} >{cat10Scale(i)}</p>\n                  </div>)}\n                </div>\n              \n                <p>Category 12</p>\n                <div className=\"flex scale\">\n                  {iterArray.map(i => <div style={{height: '70px', width: '100px', backgroundColor: cat12(i)}}>\n                    <p onClick={()=>{this.copyToClipboard(cat12(i))}} >{cat12(i)}</p>\n                  </div>)}\n                </div>\n                \n                <p>Category 20</p>\n                <div className=\"flex scale\">\n                  {iterArray.map(i => <div style={{height: '70px', width: '100px', backgroundColor: cat20(i)}}>\n                    <p onClick={()=>{this.copyToClipboard(cat20(i))}} >{cat20(i)}</p>\n                  </div>)}\n                </div>\n\n                <p>Category Split</p>\n                <div className=\"flex scale\">\n                  {iterArray.map(i => <div style={{height: '70px', width: '100px', backgroundColor: catDiv(i)}}>\n                    <p onClick={()=>{this.copyToClipboard(color(catDiv(i)).hex())}} >{color(catDiv(i)).hex()}</p>\n                  </div>)}\n                </div>\n\n              </div>\n            </div>\n\n\n\n          </div>\n   \n\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
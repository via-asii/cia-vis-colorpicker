{"version":3,"sources":["customScales.js","App.js","serviceWorker.js","index.js"],"names":["perc2color","perc","r","g","Math","round","b","toString","slice","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","nColors","diyScale0","diyScale1","str","el","document","createElement","value","body","appendChild","select","execCommand","removeChild","toastr","success","timeOut","_this2","cat10Scale","scaleOrdinal","schemeCategory10","infernoScale","scaleSequential","interpolateInferno","domain","brbgScale","interpolateBrBG","prgnScale","interpolatePRGn","viridiscolorScale","interpolateViridis","diyColor","scaleLinear","interpolate","interpolateHcl","range","iterArray","i","push","react_default","a","className","min","type","onInput","evt","setState","target","map","style","height","width","backgroundColor","length","onClick","copyToClipboard","color","hex","id","onChange","e","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2475b300.chunk.js","sourcesContent":["function perc2color(perc) {\n\tvar r, g, b = 0;\n\tif(perc < 50) {\n\t\tr = 255;\n\t\tg = Math.round(5.1 * perc);\n\t}\n\telse {\n\t\tg = 255;\n\t\tr = Math.round(510 - 5.10 * perc);\n\t}\n\tvar h = r * 0x10000 + g * 0x100 + b * 0x1;\n\treturn '#' + ('000000' + h.toString(16)).slice(-6);\n}\n\n\nexport {perc2color};\n","import React, { Component } from 'react';\nimport { \n  scaleOrdinal, \n  scaleLinear, \n  schemeCategory10, \n  scaleSequential, \n  interpolateInferno, \n  interpolateViridis, \n  interpolateHcl,\n  interpolateBrBG,\n  interpolatePRGn\n} from 'd3';\nimport {color, hex} from 'd3-color'\nimport { perc2color } from './customScales';\nimport './App.css';\nimport toastr from 'toastr';\nimport './Toastr.css';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nColors: 6,\n      diyScale0: \"#FD7F0B\",\n      diyScale1: \"#18A3FF\"\n    };\n  }\n  copyToClipboard(str){\n    const el = document.createElement('textarea');\n    el.value = str;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n    toastr.success('Copied to clipboard', \"\" ,{timeOut: 1500})\n  }\n  render() {\n    const cat10Scale = scaleOrdinal(schemeCategory10);\n\n    const infernoScale = scaleSequential(interpolateInferno)\n    .domain([1, this.state.nColors])\n    \n    const brbgScale = scaleSequential(interpolateBrBG)\n    .domain([1, this.state.nColors])\n\n    const prgnScale = scaleSequential(interpolatePRGn)\n    .domain([1, this.state.nColors])\n\n    const viridiscolorScale = scaleSequential(interpolateViridis)\n    .domain([1, this.state.nColors])\n\n    const diyColor = scaleLinear().domain([1,this.state.nColors])\n      .interpolate(interpolateHcl)\n      .range([this.state.diyScale0, this.state.diyScale1]);\n\n    const iterArray = [];\n    for (var i = 1; i <= this.state.nColors; i++) {\n      iterArray.push(i)\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>\n            CIA Vis Color Generator\n          </p>\n        </header>\n        <main>\n          <div>\n            <h3>Pick Amount of Colors</h3>\n            <input min=\"1\" type=\"number\" value={this.state.nColors} onInput={(evt) => this.setState({nColors: evt.target.value})}/>\n          </div>\n          <div>\n            <h3>Sequential</h3>\n            <div>\n\n              <div className=\"flex f-center scale\">\n                {iterArray.map((i) => <div style={{height: '70px', width: '100px', backgroundColor: perc2color(100-(100/iterArray.length)*i)}}>\n                  <p onClick={()=>{this.copyToClipboard(perc2color(i))}} >{perc2color(i)}</p>\n                </div>)}\n              </div> \n\n              <div className=\"flex f-center scale\">\n                {iterArray.map((i) => <div style={{height: '70px', width: '100px', backgroundColor: viridiscolorScale(i)}}>\n                  <p onClick={()=>{this.copyToClipboard(viridiscolorScale(i))}} >{viridiscolorScale(i)}</p>\n                </div>)}\n              </div>\n\n              <div className=\"flex f-center scale\">\n                {iterArray.map((i) => <div style={{height: '70px', width: '100px', backgroundColor: infernoScale(i)}}>\n                  <p onClick={()=>{this.copyToClipboard(infernoScale(i))}} >{infernoScale(i)}</p>\n                </div>)}\n              </div> \n              \n            </div>\n          </div>\n          <div>\n            <h3>Diverging</h3>\n            <div>   \n              \n              <div className=\"flex f-center scale\">\n                {iterArray.map((i) => <div style={{height: '70px', width: '100px', backgroundColor: brbgScale(i)}}>\n                  <p onClick={()=>{this.copyToClipboard(brbgScale(i))}} >{color(brbgScale(i)).hex()}</p>\n                </div>)}\n              </div>\n\n              <div className=\"flex f-center scale\">\n                {iterArray.map((i) => <div style={{height: '70px', width: '100px', backgroundColor: prgnScale(i)}}>\n                  <p onClick={()=>{this.copyToClipboard(color(prgnScale(i)).hex())}} >{color(prgnScale(i)).hex()}</p>\n                </div>)}\n              </div>\n\n              <div className=\"\">\n                <p>Pick your own colors:</p>\n                <div className=\"scale flex f-center\">\n                  <input type=\"color\" id=\"html5colorpicker\" onChange={(e)=> {this.setState({diyScale0: e.target.value}); } } value={this.state.diyScale0} />\n                    <div className=\"flex\">\n                      {iterArray.map((i) => <div style={{height: '70px', width: '100px', backgroundColor: diyColor(i)}}>\n                        <p onClick={()=>{this.copyToClipboard(color(diyColor(i)).hex())}} >{color(diyColor(i)).hex()}</p>\n                      </div>)}\n                    </div>\n                  <input type=\"color\" id=\"html5colorpicker\" onChange={(e)=> {this.setState({diyScale1: e.target.value}); } } value={this.state.diyScale1} />\n                </div>\n              </div>  \n\n            </div>\n          </div>\n          <div>\n            <h3>Categorical</h3>\n            <div>\n              <p>Category 10</p>\n              <div className=\"flex f-center scale\">\n                {iterArray.map(i => <div style={{height: '70px', width: '100px', backgroundColor: cat10Scale(i)}}>\n                  <p onClick={()=>{this.copyToClipboard(cat10Scale(i))}} >{cat10Scale(i)}</p>\n                </div>)}\n              </div>\n            </div>\n          </div>\n\n\n\n\n   \n\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}